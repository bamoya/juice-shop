name: Secure OWASP Juice Shop Pipeline
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME: bkimminich/juice-shop
  IMAGE_TAG: latest
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  S3_KEY_PATH: ${{ secrets.S3_KEY_PATH }}

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # CodeQL Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"
          output: 'results'
          
      - name: Upload CodeQL Results
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results-${{ matrix.language }}
          path: results
          retention-days: 30

      # SCA with OWASP Dependency-Check
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'OWASP Juice Shop'
          path: '.'
          format: 'HTML'
          out: 'reports'
          
      - name: Upload Dependency Check Results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: reports
          retention-days: 30

  test:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        
      - name: Run container for testing
        run: |
          docker run -d -p 3000:3000 --name juice-shop ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          sleep 10
          
      - name: Basic health check
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
          if [ $response -eq 200 ]; then
            echo "Health check passed"
          else
            echo "Health check failed"
            exit 1
          fi
          
      - name: Stop container
        run: docker stop juice-shop && docker rm juice-shop

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Get SSH key from S3
        run: |
          mkdir -p ~/.ssh
          aws s3 cp s3://${{ secrets.S3_BUCKET }}/${{ secrets.S3_KEY_PATH }} ~/.ssh/ec2-key.pem
          chmod 600 ~/.ssh/ec2-key.pem
          
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2-key.pem ec2-user@${{ secrets.EC2_HOST }} '
            # Stop and remove existing container if it exists
            sudo docker stop juice-shop || true
            sudo docker rm juice-shop || true
            
            # Pull latest image
            sudo docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            
            # Run new container
            sudo docker run -d \
              --name juice-shop \
              -p 3000:3000 \
              --restart unless-stopped \
              ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          '
          
      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/ec2-key.pem
